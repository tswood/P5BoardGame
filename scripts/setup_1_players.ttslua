function initPlayerButtons()
  createPlayerSelectionButtonsInZone(player_1_button_zone)
  createPlayerSelectionButtonsInZone(player_2_button_zone)
  gameMessage('Select Player Mode')
  return 1
end

function createPlayerSelectionButtonsInZone(zone)
  zone.createButton(getBasicPlayerButtonParams({
    label = 'One Player',
    click_function = 'setPlayersToOne',
    position = { 0, -0.25, 0.35 }
  }))

  zone.createButton(getBasicPlayerButtonParams({
    label = 'Two Player',
    click_function = 'setPlayersToTwo',
    position = { 0, -0.25, 0.05 }
  }))
end

function setPlayersToOne()
  gameMessage('One Player Mode')
  setupPlayers(1)
end

function setPlayersToTwo()
  gameMessage('Two Player Mode')
  setupPlayers(2)
end

function setupPlayers(player_number)
  player_1_button_zone.clearButtons()
  player_2_button_zone.clearButtons()

  settings = deepcopy(defaultSettings)
  settings.player_number = player_number

  startLuaCoroutine(Global, 'initPlayerCardButtons')
end

function initPlayerCardButtons()
  local card_x_padding = 0
  while (isContainerNotEmpty(player_card_bag)) do
    local destination = translateVector({ x = 0, y = 0, z = 0 }, PLAYER_CARD_INIT_DISPLAY_OFFSET)
    destination.x = destination.x + card_x_padding

    local card = player_card_bag.takeObject({
      position = destination
    })

    card.setRotationSmooth({ 0, 180, 180 }, false, true)

    card_x_padding = card_x_padding + PLAYER_CARD_INIT_DISPLAY_PADDING

    local cardNote = card.getGMNotes()
    card.createButton(getBasicPlayerButtonParams({
      label = cardNote,
      click_function = 'setPlayerCharacter',
      rotation = { 0, 0, 180 },
      position = { 0, -0.25, 1.75 }
    }))

    wait_spawning(card)

    settings.open_player_cards[cardNote] = card.getGUID()
  end

  gameMessage('Player 1 Character Select')
  return 1
end

function setPlayerCharacter(obj, player_clicker_color)
  local selectedCharacter = obj.getGMNotes()
  local alreadySetupPlayers = tableCount(settings.players)
  local playerName = getPlayerName(player_clicker_color)

  if (settings.players[player_clicker_color] ~= nil) then
    return
  end

  obj.clearButtons()
  obj.setRotationSmooth({ 0, -90, 0 }, false, true)
  obj.setPositionSmooth(getObjectFromGUID(PLAYER_CARDS_POS_REF[alreadySetupPlayers + 1]).getPosition(), false, true)
  obj.sticky = true

  settings.players[player_clicker_color] = {
    character_name = selectedCharacter,
    character_card_guid = obj.getGUID()
  }

  settings.open_player_cards[selectedCharacter] = nil

  alreadySetupPlayers = alreadySetupPlayers + 1

  gameMessage(playerName .. ' donned the mask of ' .. selectedCharacter)

  if (settings.player_number ~= alreadySetupPlayers) then
    gameMessage('Player ' .. alreadySetupPlayers + 1 .. ' Character Select')
  else
    cleanupPlayerCards()
    prepConfidantDeck()
    initPalaceButtons()
  end
end

function cleanupPlayerCards()
  for k, v in pairs(settings.open_player_cards) do
    local card = getObjectFromGUID(v)
    card.clearButtons()
    player_card_bag.putObject(card)
  end
end
